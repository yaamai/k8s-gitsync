test_manifest_load:
  k8s:
  - in: {}
    expect:
      data:
        metadata:
          annotations:
            k8s-gitsync/last-applied-confighash: ca3d163bab055381827226140568f3bef7eaac187cebd76878e0b63e9e442356
          labels:
            k8s-gitsync/managed: "true"
  - in:
      a: 100
    expect:
      data:
        a: 100
        metadata:
          annotations:
            k8s-gitsync/last-applied-confighash: 8e4933317f9bdd87e5ae4e3dd4275e36ec18b3a01b57b920aa91a0f4915a5220
          labels:
            k8s-gitsync/managed: "true"

test_operator_get_state:
- desc: normal
  in: {"metadata": {"name": "a", "namespace": "b"}, "kind": "Pod"}
  expect: ['kubectl', '-n', 'b', 'get', 'Pod', 'a', '-o', 'json']
- desc: missing namespace
  in: {"metadata": {"name": "a"}, "kind": "Pod"}
  expect: ['kubectl', '-n', 'default', 'get', 'Pod', 'a', '-o', 'json']
- desc: missing name
  in: {"metadata": {}, "kind": "Pod"}
  expect: []
  return:
    msg: "invalid manifest"

test_operator_create_or_update:
- desc: normal state does not synced
  cmd_exec:
  - [!bytes "{}", !bytes "{}", 0]
  - [!bytes "{}", !bytes "{}", 0]
  - [!bytes "{}", !bytes "{}", 0]
  in: {"metadata": {"name": "a", "namespace": "b"}, "kind": "Pod"}
  expect:
  - args: [['kubectl', '-n', 'b', 'get', 'Pod', 'a', '-o', 'json']]
    kwargs: {}
  - args: [['kubectl', 'create', 'namespace', 'b']]
    kwargs: {}
  - args: [['kubectl', 'apply', '-f', '-']]
    kwargs:
      stdin: !bytes |
        kind: Pod
        metadata:
          annotations:
            k8s-gitsync/last-applied-confighash: eedf1596e62bc950fd41873f337e58dea4a665c0025e1041ea5ff508b6ec14b9
          labels:
            k8s-gitsync/managed: 'true'
          name: a
          namespace: b
- desc: normal state synced
  cmd_exec:
  - - !bytes |
      {
        "metadata": {
          "annotations": {
            "k8s-gitsync/last-applied-confighash": "eedf1596e62bc950fd41873f337e58dea4a665c0025e1041ea5ff508b6ec14b9"
          }
        }
      }
    - !bytes "{}"
    - 0
  in: {"metadata": {"name": "a", "namespace": "b"}, "kind": "Pod"}
  expect:
  - args: [['kubectl', '-n', 'b', 'get', 'Pod', 'a', '-o', 'json']]
    kwargs: {}

test_recursive_load:
- desc: empty
  files: {}
  manifests: []
- desc: k8s manifest
  files:
    hoge.yaml: |
      ---
      metadata:
        name: a
        namespace: b
      kind: Pod
  manifests:
  - metadata:
      name: a
      namespace: b
    kind: Pod
- desc: k8s manifest load order
  files:
    001-hoge.yaml: |
      ---
      metadata:
        name: 001
      kind: Pod
    100-hoge.yaml: |
      ---
      metadata:
        name: 100
      kind: Pod
  manifests:
  - metadata:
      name: 001
    kind: Pod
  - metadata:
      name: 100
    kind: Pod
- desc: helm manifest
  files:
    hoge.helm: |
      ---
      name: hoge
      namespace: hoge
      chart:
        name: hoge
        version: 1.0.0
        repo: https://hoge.internal
    hoge.values.yaml: |
      a: 100
  manifests:
  - manifest:
      name: hoge
      namespace: hoge
      chart:
        name: hoge
        version: 1.0.0
        repo: https://hoge.internal
    values:
      a: 100












